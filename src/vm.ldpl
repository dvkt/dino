# === VIRTUAL MACHINE ================================================
DATA:
# instruction set version
vm.version     is number

# text bytecode input for the loader
vm.input       is text

# 8 numeric registers
vm.reg         is number vector

# instructions
vm.code        is number vector
vm.code.len    is number

# text literals & variables
vm.text        is text vector
vm.text.next   is number

# tmp
__vm.i          is number
__vm.x          is number

PROCEDURE:
store $OFFSET.TLIT in vm.text.next

sub-procedure vm.init
    # Set command line arguments on boot.
    store ARGC in vm.reg:$AC
    store 0 in __vm.i
    store $OFFSET.ARGV in __vm.x
    while __vm.i is less than ARGC do
        store ARGV:__vm.i in vm.text:__vm.x
        incr __vm.x
        incr __vm.i
    repeat
end sub-procedure
