# === CODE GENERATOR =================================================
# The generator produces Dino assembly in c.Asm from c.Nodes.

DATA:
gen.run.node is number
gen.run.x is number
gen.run.key is text
gen.run.sep is text
gen.run.indent is text

gen.stmt is text

PROCEDURE:
# emit a just an opcode
# IN: gen.stmt
sub-procedure gen.emit-opcode
    if "STORE" is equal to gen.stmt then
        display "STORE"
    else if "DISPLAY" is equal to gen.stmt then
        display "PRINT"
    else
        # dunno
    end if
end sub-procedure

sub-procedure generator.Run
    store 0 in gen.run.node
    while gen.run.node is less than c.Nodes* do
        display "    "
        store c.Nodes:gen.run.node in gen.stmt
        call gen.emit-opcode

        store 0 in gen.run.x
        store "  " in gen.run.sep
        while gen.run.x is less than 8 do
            in gen.run.key join gen.run.node ":arg" gen.run.x
            if c.Nodes:gen.run.key is not equal to "" then
                display gen.run.sep c.Nodes:gen.run.key
                store ", " in gen.run.sep
            else
                break
            end if
            incr gen.run.x
        repeat
        display crlf
        incr gen.run.node
    repeat
end sub-procedure
