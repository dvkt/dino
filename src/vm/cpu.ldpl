# === CENTRAL PROCESSING UNIT ========================================
# The CPU executes bytecode.
DATA:

PROCEDURE:

sub-procedure cpu.error
end sub-procedure

# Check bytecode format.
sub-procedure vm.bytecode.validate
    store "invalid bytecode format" in vm.error
    if vm.bytecode.len is less than 5 then
        call vm.error
    end if
    if vm.bytecode:0 is not equal to 76 then # L
        call vm.error
    end if
    if vm.bytecode:1 is not equal to 68 then # D
        call vm.error
    end if
    if vm.bytecode:2 is not equal to 80 then # P
        call vm.error
    end if
    if vm.bytecode:3 is not equal to 76 then # L
        call vm.error
    end if
    if vm.bytecode:4 is not equal to vm.bytecode.version then
        call vm.error
    end if
    store "" in vm.error
    store 5 in vm.pc
end sub-procedure

#  IN: vm.bytecode
#      vm.bytecode.len
#      vm.constants
#      vm.constants.len
sub-procedure vm.run
    call vm.bytecode.validate
    while vm.pc is less than vm.bytecode.len do
        store vm.bytecode:vm.pc in vm.opcode

        # bad instruction TODO: error
        if $NAMES:vm.opcode is equal to "" then
            in vm.error join "BAD OPCODE (" vm.pc "): " vm.opcode
            call vm.error
            exit
        end if

        store 0 in vm.i
        while vm.i is less than $SIZES:vm.opcode do
            add 1 and vm.pc in vm.pc
            store vm.bytecode:vm.pc in vm.operands:vm.operands.len
            add 1 and vm.operands.len in vm.operands.len
            add 1 and vm.i in vm.i
        repeat

        if vm.opcode is equal to $CODES:"DISPLAY" then
            display "gucci gucci goo" crlf
        end if

        add 1 and vm.pc in vm.pc
    repeat
end sub-procedure