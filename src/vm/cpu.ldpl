# === CENTRAL PROCESSING UNIT ========================================
# The CPU executes bytecode.
DATA:
cpu.error is text

cpu.operands     is number vector
cpu.operands.len is number
cpu.code is number
cpu.pc   is number
cpu.i    is number

PROCEDURE:
sub-procedure cpu.error
    display "\e[1;36m"
    if cpu.pc is less than 10 then
        display 0
    end if
    display cpu.pc " \e[1;31mCPU FAULT: \e[0;1m" cpu.error crlf
    exit
end sub-procedure

# Check bytecode format.
sub-procedure cpu.validate
    store "invalid bytecode format" in cpu.error
    store 0 in cpu.i
    while cpu.i is less than $OFFSET.CODE do
        if vm.code:cpu.i is not equal to $HEADER:cpu.i then
            call cpu.error
        end if
    repeat
    store "" in cpu.error
end sub-procedure

sub-procedure cpu.run
    call cpu.validate
    while cpu.pc is less than vm.code.len do
        store vm.code:cpu.pc in cpu.code

        if $NAMES:cpu.code is equal to "" then
            join "BAD OPCODE: " and cpu.code in cpu.error
            call cpu.error
        end if

        store 0 in cpu.i
        while cpu.i is less than $SIZES:cpu.code do
            add 1 and cpu.pc in cpu.pc
            store vm.code:cpu.pc in cpu.operands:cpu.operands.len
            add 1 and cpu.operands.len in cpu.operands.len
            add 1 and cpu.i in cpu.i
        repeat

        if cpu.code is equal to $CODES:"DISPLAY" then
            display "gucci gucci goo" crlf
        end if

        add 1 and cpu.pc in cpu.pc
    repeat
end sub-procedure