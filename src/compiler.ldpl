# === COMPILER =======================================================
DATA:
# Input -> {Lexer}
c.Input         is text           # LDPL source code

# Input -> {Lexer} -> Tokens
c.Tokens        is text vector    # source code as tokens
c.Tokens*       is number

# Tokens -> {Parser} -> Nodes & Vars
c.Nodes         is text vector    # code
c.Nodes*        is number
c.Types         is number vector  # variable types. 1=n,2=t,3=nv,4=tv
c.Vars          is text vector    # variable names
c.Vars*         is number
c.TypeNames     is text vector    # type class names, eg number

# Nodes -> {Generator} -> Assembly
c.Asm           is text           # assembly source code

# Asm -> {Assembler} -> Bytecode
c.Bytes         is number vector   # instructions
c.Bytes*        is number
c.Text          is text vector     # text literals
c.Text*         is number

# TOKENS:
tokens.NEWLINE  is text            # newline token
tokens.IS       is text            # `is` token
tokens.VECTOR   is text            # ...you get it
tokens.NUMBER   is text
tokens.TEXT     is text

PROCEDURE:
store ":NL:"   in tokens.NEWLINE
store "IS"     in tokens.IS
store "VECTOR" in tokens.VECTOR
store "NUMBER" in tokens.NUMBER
store "TEXT"   in tokens.TEXT
